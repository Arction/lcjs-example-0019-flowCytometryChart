(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(t,e,a)=>{const s=a(475),{lightningChart:o,PalettedFill:l,LUT:n,PointShape:r,ColorRGBA:i,Themes:d}=s,h=o().ChartXY({}).setTitle("Flow Cytometry Visualization").setMouseInteractions(!1).setPadding(0),u=h.getDefaultAxisX().setInterval({start:1.3,end:10}).setTitle("FSC-A (10⁶)").setMouseInteractions(!1).setThickness(60),c=h.getDefaultAxisY().setInterval({start:-.2,end:1.8}).setTitle("SSC-A (10⁶)").setMouseInteractions(!1).setThickness(80),v=h.addPointSeries({pointShape:r.Square}).setIndividualPointValueEnabled(!0).setPointSize(2).setCursorResultTableFormatter(((t,e,a,s,o)=>t.addRow("value: ",o.value?.toFixed(2)))).setPointFillStyle(new l({lookUpProperty:"value",lut:new n({interpolate:!0,steps:[{value:0,color:i(0,0,0,0)},{value:1,color:i(0,0,255)},{value:10,color:i(50,50,255)},{value:50,color:i(0,255,0)},{value:100,color:i(255,255,0)},{value:150,color:i(255,0,0)}]})}));fetch(document.head.baseURI+"examples/assets/0019/flowCytometryChart-data.json").then((t=>t.json())).then((t=>{const e=t.data.length,a=t.data[0].length,s=h.translateCoordinate({x:u.getInterval().start,y:c.getInterval().start},h.coordsAxis,h.coordsRelative),o=h.translateCoordinate({x:u.getInterval().end,y:c.getInterval().end},h.coordsAxis,h.coordsRelative),l=Math.ceil(o.x-s.x),n=Math.ceil(o.y-s.y),r=Math.max(l-2*e,0),i=Math.max(n-2*a,0);h.setPadding({left:r/2,right:r/2,top:i/2,bottom:i/2});const d=[];t.data.forEach(((e,a)=>{e.forEach(((e,s)=>{e&&d.push({x:t.x.start+a*(t.x.end-t.x.start)/t.data.length,y:t.y.start+s*(t.y.end-t.y.start)/t.data[0].length,value:e})}))})),v.add(d)}))}},t=>{t.O(0,[736],(()=>(138,t(t.s=138)))),t.O()}]);